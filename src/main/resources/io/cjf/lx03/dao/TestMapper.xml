<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.cjf.lx03.dao.TestMapper">
  <resultMap id="BaseResultMap" type="io.cjf.lx03.po.Test">
    <id column="test_id" jdbcType="INTEGER" property="testId" />
    <result column="test_name" jdbcType="VARCHAR" property="testName" />
    <result column="precipitation" jdbcType="DOUBLE" property="precipitation" />
    <result column="test_time" jdbcType="TIMESTAMP" property="testTime" />
    <result column="tester" jdbcType="VARCHAR" property="tester" />
    <result column="area_id" jdbcType="INTEGER" property="areaId" />
  </resultMap>
  <sql id="Base_Column_List">
    test_id, test_name, precipitation, test_time, tester, area_id
  </sql>

  <select id="selectWithPageAndName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from test
    where test_name like CONCAT('%',#{testName},'%')
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from test
    where test_id = #{testId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from test
    where test_id = #{testId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="io.cjf.lx03.po.Test" useGeneratedKeys="true" keyProperty="testId">
    insert into test (test_name, precipitation,
      test_time, tester, area_id
      )
    values ( #{testName,jdbcType=VARCHAR}, #{precipitation,jdbcType=DOUBLE},
      #{testTime,jdbcType=TIMESTAMP}, #{tester,jdbcType=VARCHAR}, #{areaId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="io.cjf.lx03.po.Test">
    insert into test
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="testId != null">
        test_id,
      </if>
      <if test="testName != null">
        test_name,
      </if>
      <if test="precipitation != null">
        precipitation,
      </if>
      <if test="testTime != null">
        test_time,
      </if>
      <if test="tester != null">
        tester,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="testId != null">
        #{testId,jdbcType=INTEGER},
      </if>
      <if test="testName != null">
        #{testName,jdbcType=VARCHAR},
      </if>
      <if test="precipitation != null">
        #{precipitation,jdbcType=DOUBLE},
      </if>
      <if test="testTime != null">
        #{testTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tester != null">
        #{tester,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.cjf.lx03.po.Test">
    update test
    <set>
      <if test="testName != null">
        test_name = #{testName,jdbcType=VARCHAR},
      </if>
      <if test="precipitation != null">
        precipitation = #{precipitation,jdbcType=DOUBLE},
      </if>
      <if test="testTime != null">
        test_time = #{testTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tester != null">
        tester = #{tester,jdbcType=VARCHAR},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=INTEGER},
      </if>
    </set>
    where test_id = #{testId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.cjf.lx03.po.Test">
    update test
    set test_name = #{testName,jdbcType=VARCHAR},
      precipitation = #{precipitation,jdbcType=DOUBLE},
      test_time = #{testTime,jdbcType=TIMESTAMP},
      tester = #{tester,jdbcType=VARCHAR},
      area_id = #{areaId,jdbcType=INTEGER}
    where test_id = #{testId,jdbcType=INTEGER}
  </update>
</mapper>